@page "/"
@using System.Net.Http
@using System.Net.Http.Json
@using InvestmentSimulator.Client.Models.Simulation.Deposit
@inject HttpClient Http

<PageTitle>Investment Simulator</PageTitle>

<div class="row">
    <div class="col-md-4">
        <h1>Euro Deposit Simulator</h1>
        <p class="mb-4">See how your investment grows with real ECB rates.</p>

        <div class="card">
            <div class="card-body">
                <EditForm Model="@investmentInput" OnValidSubmit="HandleSubmit" FormName="depositSimForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="initialAmount" class="form-label">Initial Amount (â‚¬)</label>
                        <InputNumber id="initialAmount" class="form-control" @bind-Value="investmentInput.InitialAmount" />
                    </div>

                    <div class="mb-3">
                        <label for="timePeriod" class="form-label">Time Period (Months)</label>
                        <InputNumber id="timePeriod" class="form-control" @bind-Value="investmentInput.TimePeriodInMonths" />
                    </div>

                    <div class="mb-3">
                        <label for="term" class="form-label">Investment Term</label>
                        <InputSelect id="term" class="form-select" @bind-Value="investmentInput.Term">
                            @foreach (var termValue in Enum.GetValues(typeof(InvestmentTerm)))
                            {
                                <option value="@termValue">@termValue</option>
                            }
                        </InputSelect>
                    </div>

                    <div class="mb-3">
                        <label for="taxRate" class="form-label">Capital Gains Tax Rate (%) (Optional)</label>
                        <InputNumber id="taxRate" class="form-control" @bind-Value="investmentInput.TaxRate" />
                    </div>

                    <button type="submit" class="btn btn-primary">Simulate</button>
                </EditForm>
            </div>
        </div>
    </div>

    @if (simulationResult != null)
    {
        <div class="col-md-8">
            <h2>Simulation Result</h2>
            
            <div class="card bg-light mb-3">
                <div class="card-header">Summary</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <p><strong>Final Net Value:</strong> <span class="text-success">@simulationResult.FinalNetValue.ToString("C")</span></p>
                            <p><strong>Net Interest Earned:</strong> @simulationResult.NetInterestEarned.ToString("C")</p>
                        </div>
                        <div class="col">
                            <p><strong>Final Real Value (after inflation):</strong> <span class="text-info">@simulationResult.FinalRealValue.ToString("C")</span></p>
                            <p><strong>Real Interest Earned:</strong> @simulationResult.RealInterestEarned.ToString("C")</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-header">Breakdown</div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Total Interest Earned (Gross)
                                <span>@simulationResult.TotalInterestEarned.ToString("C")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Total Tax Paid
                                <span class="text-danger">-@simulationResult.TotalTaxPaid.ToString("C")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Value Lost to Inflation
                                <span class="text-warning">-@simulationResult.TotalValueLostToInflation.ToString("C")</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-6">
                     <div class="card mb-3">
                        <div class="card-header">Context</div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                ECB Interest Rate Used
                                <span>@simulationResult.InterestRateUsed.ToString("F2")%</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Eurozone Inflation Rate Used
                                <span>@simulationResult.InflationRateUsed.ToString("F2")%</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <h3>Yearly Evolution</h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Year</th>
                        <th>Starting Balance</th>
                        <th>Interest Earned</th>
                        <th>Ending Balance</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in simulationResult.Evolution)
                    {
                        <tr>
                            <td>@item.Year</td>
                            <td>@item.StartingBalance.ToString("C")</td>
                            <td>@item.InterestEarned.ToString("C")</td>
                            <td>@item.EndingBalance.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private DepositInput investmentInput = new();
    private DepositResult? simulationResult;

    private async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("/api/simulation/simulate", investmentInput);

        if (response.IsSuccessStatusCode)
        {
            simulationResult = await response.Content.ReadFromJsonAsync<DepositResult>();
        }
        else
        {
            // Handle error (e.g., show an error message)
            simulationResult = null;
        }
    }
}
